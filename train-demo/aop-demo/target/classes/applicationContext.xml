<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:bean="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
   <aop:aspectj-autoproxy proxy-target-class="true"/>
    <aop:config>
        <aop:aspect id="TestAspect" ref="aspectBean">
            <!--配置service包下所有类或接口的所有方法-->
            <aop:pointcut id="businessService" expression="execution(* com.neusoft.train.demo.aop.service.*.*(..))" />
            <aop:before pointcut-ref="businessService" method="doBefore"/>
            <aop:after pointcut-ref="businessService" method="doAfter"/>
            <aop:around pointcut-ref="businessService" method="doAround"/>
            <aop:after-returning pointcut-ref="businessService" method="afterReturn"/>
            <aop:after-throwing pointcut-ref="businessService" method="doThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>
    <bean id="aspectBean" class="com.neusoft.train.demo.aop.aspect.TestAspect" />
    <bean id="demoService" class="com.neusoft.train.demo.aop.service.impl.AOPDemoServiceImpl"></bean>


</beans>
    